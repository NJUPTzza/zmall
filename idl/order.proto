syntax = "proto3";

package order;

option go_package = "/order";

// 订单服务
service OrderService {
  // 创建订单
  rpc CreateOrder(CreateOrderRequest) returns (CreateOrderResponse);
  // 获取订单详情
  rpc GetOrder(GetOrderRequest) returns (GetOrderResponse);
}

// 订单状态枚举
enum OrderStatus {
  UNKNOWN = 0;        // 未知状态
  PENDING = 1;        // 待支付
  COMPLETED = 2;      // 已完成
  CANCELLED = 3;      // 已取消
  PAYMENT_FAILED = 4; // 支付失败
}

// 订单信息
message Order {
  int64 id = 1;           // 订单ID
  int64 user_id = 2;      // 用户ID
  int64 product_id = 3;   // 商品ID
  int32 quantity = 4;     // 购买数量
  float total_price = 5;  // 总价
  OrderStatus status = 6;      // 订单状态
}

// 创建订单请求
message CreateOrderRequest {
  int64 user_id = 1;      // 用户ID
  int64 product_id = 2;   // 商品ID
  int32 quantity = 3;     // 购买数量
}

// 创建订单返回
message CreateOrderResponse {
  CommonResponse commonResponse = 1;
  Order order = 2;        // 创建的订单信息
}

// 获取订单请求
message GetOrderRequest {
  int64 id = 1;           // 订单ID
}

// 获取订单返回
message GetOrderResponse {
  CommonResponse commonResponse = 1;
  Order order = 2;        // 订单信息
}

// 统一返回消息
message CommonResponse {
  int32 code = 1;          // 状态码
  string message = 2;      // 消息
}