syntax = "proto3";

package notification;

option go_package = "/notification";

// 通知服务
service NotificationService {
  // 发送通知
  rpc SendNotification(SendNotificationRequest) returns (SendNotificationResponse);
  // 获取用户通知
  rpc GetNotifications(GetNotificationsRequest) returns (GetNotificationsResponse);
}

// 通知类型枚举
enum NotificationType {
  UNKNOWN = 0;          // 未知类型
  PAYMENT_SUCCESS = 1;  // 支付成功
  ORDER_CREATED = 2;    // 订单创建
  ORDER_SHIPPED = 3;    // 订单发货
  ORDER_DELIVERED = 4;  // 订单送达
  REFUND_SUCCESS = 5;   // 退款成功
}

// 通知信息
message Notification {
  int64 id = 1;           // 通知ID
  int64 user_id = 2;      // 用户ID
  NotificationType type = 3;        // 通知类型（例如 "payment_success", "order_created"）
  string content = 4;     // 通知内容
  int64 timestamp = 5;    // 发送时间戳
  bool read = 6;          // 是否已读
}

// 发送通知请求
message SendNotificationRequest {
  int64 user_id = 1;      // 用户ID
  NotificationType type = 2;
  string content = 3;     // 通知内容
}

// 发送通知返回
message SendNotificationResponse {
  CommonResponse commonResponse = 1;
  Notification notification = 2;  // 发送的通知
}

// 获取通知请求
message GetNotificationsRequest {
  int64 user_id = 1;      // 用户ID
}

// 获取通知返回
message GetNotificationsResponse {
  CommonResponse commonResponse = 1;
  repeated Notification notifications = 2;  // 通知列表
}

// 统一返回消息
message CommonResponse {
  int32 code = 1;          // 状态码
  string message = 2;      // 消息
}